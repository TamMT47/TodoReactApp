{"version":3,"sources":["components/AddTodo.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["AddTodo","state","Id","Title","Status","handleIdChange","event","console","log","target","value","setState","handleTitleChange","handleStatusChange","handleToDoSubmit","preventDefault","props","onAdd","onSubmit","this","className","onChange","placeholder","type","Component","TodoList","todos","deleteToDo","todo","filteredItems","filter","x","addToDo","editToDo","map","key","style","color","onClick","icon","library","add","faTrash","faEdit","faPlus","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43bdea00.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class AddTodo extends Component {\n    state = {\n        Id: \"\",\n        Title: \"\",\n        Status: \"Pending\"\n    };\n\n    handleIdChange = (event) => {\n        console.log(event.target.value);\n        this.setState({\n            Id: event.target.value\n        });\n    };\n    handleTitleChange = (event) => {\n        this.setState({\n            Title: event.target.value\n        });\n    }\n    handleStatusChange = (event) => {\n        this.setState({\n            Status: event.target.value\n        });\n    };\n    handleToDoSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAdd({\n            Id: this.state.Id,\n            Title: this.state.Title,\n            Status: this.state.Status\n        });\n        this.setState({\n            Id: \"\",\n            Title: \"\",\n            Status: \"Pending\"\n        });\n    };\n    render() {\n        return (\n            <div>\n                <h3>\n                    Add ToDo\n                </h3>\n                <form onSubmit={this.handleToDoSubmit} >\n                    <div className=\"form-group\" >\n                        <input value={this.state.Id} onChange={this.handleIdChange} className=\"form-control\" placeholder=\"Enter Id\" />\n                    </div>\n                    <div className=\"form-group\" >\n                        <input value={this.state.Title} onChange={this.handleTitleChange} className=\"form-control\" placeholder=\"Enter Title\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <select value={this.state.Status} onChange={this.handleStatusChange} className=\"form-control\" >\n                            <option value=\"Done\" >Done</option>\n                            <option value=\"Pending\" >Pending</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"form-control btn btn-primary\" >Add Todo</button>\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AddTodo from './AddTodo';\nexport default class TodoList extends Component {\n\n    state = {\n        todos: [\n            { Id: '1', Title: 'Push your code to github', Status: 'Done' },\n            { Id: '2', Title: 'Email to your manager', Status: 'Pending' }\n        ]\n    };\n    deleteToDo = (todo) => {\n        const filteredItems = this.state.todos.filter(x => x.Id !== todo.Id);\n        this.setState({\n            todos: filteredItems\n        });\n    };\n    addToDo = (todo) => {\n        this.setState({\n            todos: [...this.state.todos, todo]\n        });\n    };\n    editToDo = (x) => {\n        this.setState(state => ({\n            todos: state.todos.map(todo => {\n                if (todo.Id === x.Id) {\n                    return {\n                        ...todo,\n                        Status: todo.Status === \"Done\" ? \"Pending\" : \"Done\"\n                    };\n                } else {\n                    return todo;\n                }\n            })\n        }));\n    };\n    render() {\n        return (\n            <div>\n                <AddTodo onAdd={this.addToDo} ></AddTodo>\n                <h1>TodoList </h1>\n                <table className=\"table\" >\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Title</th>\n                            <th>Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.todos.map(x => {\n                            return (\n                                <tr key={x.Id}>\n                                    <td>{x.Id}</td>\n                                    <td>{x.Title}</td>\n                                    <td style={{ color: x.Status === \"Done\" ? \"green\" : \"red\" }} >{x.Status}</td>\n                                    <td>\n                                        <button className=\"btn btn-primary\" onClick={() => this.deleteToDo(x)} >\n                                            <span>\n                                                <FontAwesomeIcon icon=\"trash\"></FontAwesomeIcon>\n                                            </span>\n                                        </button>\n                                        |\n                                        <button className=\"btn btn-primary\" onClick={() => this.editToDo(x)}>\n                                            <span>\n                                                <FontAwesomeIcon icon=\"edit\"></FontAwesomeIcon>\n                                            </span>\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faTrash, faEdit, faPlus);\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <TodoList></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}